<!-- profile.ejs
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
</head>
<body>
    <h1>User Profile</h1>
    <p>Welcome, <%= user.nom %>!</p>
    <p>Email: <%= user.email %></p>
    
    <script>
        const token = "<%= token %>";
        localStorage.setItem('token', token);
    </script>
</body>
</html> -->






<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <link rel="stylesheet" href="style.css"> -->
    <link rel = "preconnect" href = "https://fonts.gstatic.com">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">

    <!-- Ajout de Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <!-- Ajout de Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
   
    <title>Profile</title>
    <style>
        
*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    font-family: 'poppins', sans-serif;
    scroll-behavior: smooth;
}

p{
    font-weight: 300;
    color: #111;
}

header{
    position: fixed;
    top: 0%;
    left: 0%;
    padding: 20px 10px;
    width: 100%;
    z-index: 1;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    transition: 0.5s;
}

.logo{
    color: rgb(7, 7, 7);
    font-weight: bold;
    font-size: 1.5em;    text-decoration: none;
}
.logo span{
    color: #fb911f;
}

.navbar{
    display: flex;
    position: relative;
}
.navbar li{
    list-style: none;
}
.navbar a{
    color: #fff;
    text-decoration: none;
    margin-left: 30px;
    font-weight: 700;
}

.btn-reserve{
    padding: 10px 20px;
    background: #fb911f;
   margin-top: -10px;
   text-transform:uppercase ;
}

.btn-reserve:hover{
    background: #d87710;
    transition: ease-out;
}

header .navbar li a:hover{
    color: #fb911f;
    border-bottom: 2px solid #fb911f;
}

.contenu p:nth-child(2){
    color: #ffff;
    font-size: 1.2em;
}

.btn1{
    font-size: 1em;
    color: #fff;
    background: #fb911f;
    padding: 10px 20px;
    display: inline-block;
    margin-top: 20px;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 2px;
    transition: 0.5s;
    margin-left: 10px;
}
.btn2{
    font-size: 1em;
    color: #fff;
    background: #2a4963;
    padding: 10px 20px;
    display: inline-block;
    margin-top: 20px;
    text-decoration: none;
    text-transform: uppercase;
    letter-spacing: 2px;
    transition: 0.5s;
    margin-left: 10px;
}

.btn1:hover{
letter-spacing: 4px;
}
section{
    padding: 100px;
}
.row{
    position: relative;
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.row .col50{
    position: relative;
    width: 48%;
    justify-content: center;
    align-items: center;

}

.row .col50 h2{
    margin-bottom: 20px;
}

.titre-texte{
    color: #000;
    font-size: 2em;
    font-weight: 300px;
    text-transform: capitalize;
}

.titre-texte span{
    color: #fb911f;
    font-size: 1.5em;
    font-weight: 700px;
}

.row .col50 img{
    height: 450px;
    width: 600px;
    position: relative;
}

.titre{
    display: flex;
    width: 100%;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}
.card {
            margin-bottom: 20px; /* Espacement entre les cartes */
        }
.salles{
    margin-top: -100px;
}

.salles .contenu{
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    margin-top: 40px;
}

.salles .contenu .box{
    width: 350px;
    margin: 20px;
    border: 20px solid #fff;
    box-shadow: 20px 15px 35px rgba(0,0,0, 0.8);
}

.salles .contenu .box .imbox{
    position: relative;
    width: 100%;
    height: 300px;
}

.salles .contenu .box .imbox img{
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 300px;
    object-fit: cover;
}

.salles .contenu .box .text{
    text-align: center;
    font-weight: 300px;
    color: #111;
}

.salles .contenu .box .text h3{
    font-weight: 400;
}

.expert{
    margin-top:-100px;
}

.expert .contenu{
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-top: 40px;
}

.expert .contenu .box{
    width: 250px;
    margin: 15px;
}
.expert .contenu .box img{
    position: relative;
    width: 100%;
    height: 300px;
    top: 0;
    left: 0;
    object-fit: cover;
}

.expert .contenu .box h3{
    color: #111;
    font-weight: 400;
    text-align: center;
}



.res .contenu{
    display: flex;
    margin-top: 40px;
    width: 100%;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    flex-direction: row;
}

.res .contenu .box{
    width: 340px;
    margin: 20px;
    background: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    border-radius: 15px;
    padding: 40px;
}

.res .contenu .box .imbox{
    width: 80px;
    height: 80px;
    border-radius: 50px;
    position: relative;
    margin-bottom: 20px;
    overflow: hidden;
}

.res .contenu .box .imbox img{
    position: relative;
    width: 100%;
    height: 100%;
    top:0;
    left: 0;
    object-fit: cover;
    justify-content: center;
    align-items: center;
}

.res .contenu .box .text{
    text-align: center;
    color: #666;
    font-style: italic;
}

.res .contenu .box .text h3{
    color: #fb911f;
    margin-top: 20px;
    font-size: 1em;
    font-weight: 600;
}

.blanc .titre-texte{
    color: #fff;
}

.blanc .titre-texte,
.blanc p{
    color: #fff;
}

.contact{
    background-image: url(./images/img-form.jpg);
    background-size: cover;
    box-shadow: 2px 2px 12px rgba(0,0,0, 0.8);
    width: 100%;
    background-position: unset;
}

.contactform{
    padding: 75px 50px;
    background: #fff;
    box-shadow: 5px 15px 50px rgba(0,0,0, 0.8);
    max-width: 500px;
    margin-top: 50px;
    justify-content: center;
    align-items: center;
    margin-left: 38%;
}

.contactform .inputboite{
    position: relative;
    width: 100%;
    margin-bottom: 20px;
}

.contactform h3{
    color: #111;
    font-size: 1.2em;
    margin-bottom: 20px;
}


header.sticky{
    background: #fff;
    padding: 10px 10px;
    box-shadow: 0px 5px 20px rgba(0,0,0, 0.05);
}

header.sticky .logo{
    color: #000;
}

header.sticky .navbar li a {
    color: #000;
}

header.sticky li a:hover{
    color: #fb911f;
    border-bottom: 2px solid #fb911f;
}

@media (max-width: 991px) {
header, 
header.sticky{
    padding: 10px 20px;
}

header .navbar li{
    margin-left: 0px;
}

header .navbar li a {
    text-decoration: none;
    color: #111;
    font-size: 1.6em;
    font-weight: 300;
}

.navbar{
    display: none;
}
section{
    padding: 20px;
}

header .navbar.active{
    width: 100%;
    height: calc(100% -68px);
    position: fixed;
    top: 68px;
    left:0;
    display: flex;
    justify-content: center;
    flex-direction: column;
    background: #ffff;
    align-items: center;
}

.salleToggle{
    position: relative;
    width: 40px;
    height: 40px;
    /* background-image: url(./images/menu.png); */
    background-repeat: no-repeat;
    background-position: center;
    cursor: pointer;
    background-size: 30px;
}

.salleToggle.active
{
    
    background-size: 25px;
    background-repeat: no-repeat;
    background-origin: center;
}

header.sticky .salleToggle{
    filter: invert(1);
}


.banniere .contenu h2{
    font-size: 2em;
}

.row .col50 img{
    margin-left: 18%;
}

.contenu p:nth-child(2){
    font-size: 1.2em;
}
.expert{
    margin-top: 0px;
}

.salles{
    margin-top: 0px;
}

.row{
    display: flex;
    flex-direction: column;
}


table {
    width: 100%;
    border-collapse: collapse;
}

th, td {
    border: 1px solid black; /* Définir l'épaisseur et le style de la bordure */
    padding: 8px;
    text-align: left;
}

.res h2{
    font-size: 2em;
    text-align: center;
}

.res p{
text-align: center;
}
/* Style de la liste déroulante */
.dropdown {
    position: relative;
    display: inline-block;
}

.dropbtn {
    background-color: #fff;
    color: #333;
    padding: 12px 16px;
    border: none;
    cursor: pointer;
    font-size: 16px; /* Taille de la police du bouton */
    border-radius: 4px; /* Bordure arrondie */
}

.dropdown-content {
    display: none;
    position: absolute;
    background-color: #fff;
    min-width: 160px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    z-index: 1;
    border-radius: 4px; /* Bordure arrondie */
}

.dropdown-content a {
    color: #333;
    padding: 12px 16px;
    text-decoration: none;
    display: block;
    transition: background-color 0.3s ease; /* Transition fluide */
}

.dropdown-content a:hover {
    background-color: #f9f9f9; /* Couleur de fond au survol */
}

.show {
    display: block;
}

.contactform{
    margin-left: 25%;
}


    .row .col50 {
        position: relative;
        width: 100%;
        justify-content: center;
        align-items: center;
        margin-bottom: 30px;
    
    }

    .row{
        flex-direction: column;
    }
}

@media (max-width: 480px)
{
    .banniere .contenu h2{
        font-size: 2.2em;
        color: #fff;
    }

    .titre-text{
        color: #000;
        font-size: 2rem;
        font-weight: 300;
        text-transform: capitalize;
    }

    .res h2 
    {
        font-size: 1.1em;
    }

    
}
    </style>
<body>
<header>
    <a href="#" class="logo"><span>R</span>oom <span>M</span>eeting</a>
    <div class="salleToggle" onclick="toggleMenu();"></div>
    <ul class="navbar">
       
        
        <li><a href="#salles" onclick="toggleMenu();">Salles</a></li>
         <li><a href="#res" onclick="toggleMenu();">Reservation</a></li>
        <!-- <li><a href="#expert" onclick="toggleMenu();">Expert</a></li> -->
        <!-- <li><a href="#res"  class="btn-reserve" onclick="toggleMenu();">Mon Reservation</a></li> -->

        <li><a href="#res"  class="btn-reserve" onclick="toggleMenu();"><%=user.prenom%></a></li>

        <!-- <li id="userSection">
            <script>
                function toggleUserOptions() {
                    var userDropdown = document.getElementById("userDropdown");
                    if (userDropdown.style.display === "none") {
                        userDropdown.style.display = "block";
                    } else {
                        userDropdown.style.display = "none";
                    }
                }
                </script>
            <div class="dropdown">
                <a href="javascript:void(0);" class="btn-reserve" onclick="toggleUserOptions();"><%=user.prenom%></a>
                <div id="userDropdown" class="dropdown-content" style="display: none;">
                    <a href="#" onclick="logout();">Logout</a>
                </div>
            </div>
        </li> -->
        
    </ul>
</header>

<section class="apropos" id="apropos">
    <div class="row">
        <div class="col50">
            
            
       
        </div>
    </div>
</section>    
<section class="salles" id="salles">
    <div class="titre">
        <h2 class="titre-texte"><span>Trouvez L'espace Idéal Pour Vos Réunions</span></h2>
        
    </div>
       
    
</section>

<div class="container-fluid">
    <div class="row mt-3">
        <div class="col-md-3">   
        </div>
        <div class="col-md-9">
            <div class="card light-card"> 
                <div class="card-body">
                    <!-- Les salles seront ajoutées  dynamiquement -->
                    <div class="row" id="salleContainer">
                        <!-- Les cartes des salles seront ajoutées ici -->
                    </div>
                </div>
            </div>

            <!-- Formulaire de réservation -->
            <!-- Formulaire de réservation -->
            <div class="card mt-3">
                <div class="card-body">
                    <h5 class="card-title">Réserver une salle</h5>
                        
                    <form id="reservationForm">
                        <div class="form-group">
                            <label for="date">Jour:</label>
                            <input type="date" class="form-control" id="jour" name="jour" required>
                        </div>
                        <div class="form-group">
                            <label for="from">De:</label>
                            <input type="time" class="form-control" id="heureDebut" name="heureDebut" required>
                        </div>   
                            <div class="form-group">
                            <label for="to">À:</label>

                            <input type="time" class="form-control" id="heureFin" name="heureFin" required>
                        </div>
                        <div class="form-group">
                            <label for="salle">Salle:</label>
                                <select id="salleId" class="form-control" name="salleId" required>

                                <!-- Options des salles seront ajoutées ici -->

                            </select>
                        </div>
                        <button type="submit" class="btn btn-primary">Réserver</button>
                    </form>
                    
                </div>
            </div>
        </div>
    </div>
</div>


<section class="expert" id="expert">

</section>
<section class="res" id="res">
    <div class="contenu">
        <div class="col-md-9">
            <div class="card light-card">
                <div class="card-body">
                    
                    <table  border="1" id="reservationTable">
                        <thead>
                            <tr>
                                <th>Jour</th>
                                <th>Heure de début</th>
                                <th>Heure de fin</th>
                                <th>Salle</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="reservationBody">
                            <!-- Les réservations seront ajoutées ici dynamiquement -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>


<script type="text/javascript">
     window.addEventListener('scroll', function(){
         const header =document.querySelector('header');
         header.classList.toggle("sticky", window.scrollY > 0 );
     });

     function toggleMenu(){
         const tmenuToggle = document.querySelector('.salleToggle');
         const navbar = document.querySelector('.navbar');
         navbar.classList.toggle('active');
         salleToggle.classList.toggle('active');
     }



 /************************************************  catalogue salle ******************/
 
        

        async function loadSalleList() {
            const response = await fetch('/salle/salles');
            const data = await response.json();
            const salleContainer = document.getElementById('salleContainer');

            data.forEach(salle => {
                const cardDiv = document.createElement('div');
                cardDiv.classList.add('col-md-4');

                const card = `
                    <div class="card">
                        <img src="/images/${salle.image}" class="card-img-top" alt="Image de la salle">
                        <div class="card-body">
                            <h5 class="card-title">Salle ${salle.numero}</h5>
                            <p class="card-text">Capacité: ${salle.capacite}</p>
                            <p class="card-text">Équipements: ${salle.equipements.join(', ')}</p>
                            <p class="card-text">Disponible: ${salle.disponible ? 'Oui' : 'Non'}</p>
                        </div>
                    </div>
                `;

                cardDiv.innerHTML = card;
                salleContainer.appendChild(cardDiv);
            });

            // Remplir les options du formulaire de réservation avec les salles disponibles
            const salleSelect = document.getElementById('salle');
            data.forEach(salle => {
                if (salle.disponible) {
                    const option = document.createElement('option');
                    option.value = salle._id;
                    option.textContent = `Salle ${salle.numero}`;
                    salleSelect.appendChild(option);
                }
            });
        }



        // Charger les salles lors du chargement de la page
        document.addEventListener('DOMContentLoaded', function() {
            loadSalleList();
        });

       
            


/********************************************************************le numero disponible de salle (list deroulante) ******/

async function loadSalleNumero() {
            const response = await fetch('/salle/salles');
            const data = await response.json();
            const salleSelect = document.getElementById('salleId');

            data.forEach(salle => {
                const option = document.createElement('option');
                option.value = salle._id;
                option.textContent = `Salle ${salle.numero}`;
                salleSelect.appendChild(option);
            });
        }

        // Appel de la fonction pour charger la liste des salles au chargement de la page
        loadSalleNumero();


/*********************************************            ajout reservation ***************/
// Script JavaScript pour soumettre le formulaire de réservation

document.getElementById('reservationForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Empêche la soumission par défaut du formulaire

            const formData = new FormData(this);
            const salleId = formData.get('salleId');
            const jour = formData.get('jour');
            const heureDebut = formData.get('heureDebut');
            const heureFin = formData.get('heureFin');

            const token = '<%= token %>'; // Récupérer le token JWT depuis la variable passée du serveur

            try {
                const response = await fetch('http://localhost:3000/reservation/add', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + token,
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ salleId, jour, heureDebut, heureFin })
                });

                if (response.ok) {
                    alert('Réservation ajoutée avec succès');
                } else {
                    const errorMessage = await response.text();
                    alert('Erreur lors de l\'ajout de la réservation: ' + errorMessage);
                }
            } catch (error) {
                console.error('Erreur lors de la requête:', error);
                alert('Erreur lors de la requête');
            }
        });



/****************************************************** mes reservations ************/
// Script JavaScript pour récupérer et afficher les réservations de l'utilisateur
document.addEventListener('DOMContentLoaded', async function() {
    try {
        const token = localStorage.getItem('token'); // Récupérer le token JWT depuis le localStorage

        const response = await fetch('http://localhost:3000/reservation/my-reservations', {
            method: 'GET',
            headers: {
                'Authorization': 'Bearer ' + token,
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            const reservations = await response.json();
            const reservationBody = document.getElementById('reservationBody');
            reservationBody.innerHTML = ''; // Efface le contenu précédent

            reservations.forEach(reservation => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${reservation.jour}</td>
                    <td>${reservation.heureDebut}</td>
                    <td>${reservation.heureFin}</td>
                    <td>${reservation.salleId}</td>
                    <td>
                        <button onclick="editReservation('${reservation._id}')"><i class="fas fa-edit"></i></button>
                        <button onclick="deleteReservation('${reservation._id}')"><i class="fa fa-trash" aria-hidden="true"></i></button>
                    </td>
                `;
                reservationBody.appendChild(row);
            });
        } else {
            const errorMessage = await response.text();
            alert('Erreur: ' + errorMessage);
        }
    } catch (error) {
        console.error('Erreur:', error);
        alert('Erreur lors de la récupération des réservations utilisateur');
    }
});


// Fonction pour éditer une réservation
function editReservation(reservationId) {
    // Ajoutez ici le code pour éditer une réservation avec l'ID donné
}

// Fonction pour supprimer une réservation
async function deleteReservation(reservationId) {
    try {
        const token = localStorage.getItem('token'); // Récupérer le token JWT depuis le localStorage

        const response = await fetch(`http://localhost:3000/reservation/${reservationId}`, {
            method: 'DELETE',
            headers: {
                'Authorization': 'Bearer ' + token,
                'Content-Type': 'application/json'
            }
        });

        if (response.ok) {
            alert('Réservation supprimée avec succès');
            // Recharger les réservations après la suppression
            document.dispatchEvent(new Event('DOMContentLoaded'));
        } else {
            const errorMessage = await response.text();
            alert('Erreur: ' + errorMessage);
        }
    } catch (error) {
        console.error('Erreur:', error);
        alert('Erreur lors de la suppression de la réservation');
    }
}


        
 </script>
</body>
</html>